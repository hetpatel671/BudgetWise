name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.2
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Setup Gradle Wrapper
      run: |
        gradle wrapper --gradle-version 8.2
        chmod +x gradlew
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Install required SDK components
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
      
    - name: Create Debug Keystore
      run: |
        keytool -genkey -v -keystore app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
        
    - name: Build debug APK
      run: |
        ls -la
        ls -la gradle/wrapper/
        ./gradlew --version
        ./gradlew assembleDebug --stacktrace --info
      
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace
      
    - name: Run lint checks
      run: ./gradlew lint
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --continue
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk
        
    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: app/build/reports/lint-results-*.html
        
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: app/build/reports/tests/
        
    - name: Build summary
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "### APK Files Generated:" >> $GITHUB_STEP_SUMMARY
        echo "- Debug APK: $(ls -lh app/build/outputs/apk/debug/app-debug.apk 2>/dev/null || echo 'Not found')" >> $GITHUB_STEP_SUMMARY
        echo "- Release APK: $(ls -lh app/build/outputs/apk/release/app-release-unsigned.apk 2>/dev/null || echo 'Not found')" >> $GITHUB_STEP_SUMMARY
        echo "### Build Configuration:" >> $GITHUB_STEP_SUMMARY
        echo "- Java Version: $(java -version 2>&1 | head -1)" >> $GITHUB_STEP_SUMMARY
        echo "- Gradle Version: $(./gradlew --version | grep Gradle)" >> $GITHUB_STEP_SUMMARY
        echo "- Android SDK: $ANDROID_HOME" >> $GITHUB_STEP_SUMMARY

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download release APK
      uses: actions/download-artifact@v4
      with:
        name: release-apk
        path: ./
        
    - name: Get version from gradle
      id: get_version
      run: |
        # Extract base version from defaultConfig (without build type suffixes)
        VERSION=$(grep -A 10 "defaultConfig" app/build.gradle | grep "versionName" | cut -d'"' -f2)
        if [ -z "$VERSION" ]; then
          echo "Error: Could not extract version from build.gradle"
          exit 1
        fi
        echo "Extracted version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        
    - name: Check if tag exists
      id: check_tag
      run: |
        TAG="${{ steps.get_version.outputs.tag }}"
        if git rev-parse "$TAG" >/dev/null 2>&1; then
          echo "Tag $TAG already exists, skipping release creation"
          echo "tag_exists=true" >> $GITHUB_OUTPUT
        else
          echo "Tag $TAG does not exist, proceeding with release"
          echo "tag_exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      id: create_release
      if: steps.check_tag.outputs.tag_exists == 'false'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.tag }}
        name: BudgetWise ${{ steps.get_version.outputs.version }}
        body: |
          ## BudgetWise ${{ steps.get_version.outputs.version }}
          
          ### What's New
          - Personal finance management app
          - Transaction tracking and categorization
          - Budget management with analytics
          - Secure data encryption (AES-256)
          - Biometric authentication support
          - Material 3 design
          
          ### Installation
          1. Download the APK file below
          2. Enable "Install from unknown sources" in your Android settings
          3. Install the APK file
          
          ### Technical Details
          - **Minimum Android Version**: Android 7.0 (API 24)
          - **Target Android Version**: Android 14 (API 34)
          - **APK Size**: ~3.1MB (optimized with ProGuard)
          - **Permissions**: Storage, Notifications, Biometric
          
          ### Security
          - All financial data is encrypted using AES-256
          - Biometric authentication for app access
          - No data is transmitted to external servers
        draft: false
        prerelease: false
        files: |
          ./app-release.apk