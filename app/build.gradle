plugins {
    id 'com.android.application'
}

android {
    namespace 'com.budgetwise'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.budgetwise"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Vector drawables support
        vectorDrawables.useSupportLibrary = true
        
        // Architecture support for better compatibility
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        
        // ProGuard configuration files
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
            
            // Add crash reporting for debug builds
            buildConfigField "boolean", "ENABLE_CRASH_REPORTING", "true"
            buildConfigField "String", "BUILD_TYPE", '"debug"'
        }
        
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Enable zipalign for compatibility
            zipAlignEnabled true
            
            // Signing config for release builds
            signingConfig signingConfigs.release
            
            // Add build config fields
            buildConfigField "boolean", "ENABLE_CRASH_REPORTING", "true"
            buildConfigField "String", "BUILD_TYPE", '"release"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        
        // Enable core library desugaring for older API levels
        coreLibraryDesugaringEnabled true
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
    
    // Packaging options
    packagingOptions {
        resources {
            excludes += [
                '/META-INF/{AL2.0,LGPL2.1}',
                '/META-INF/DEPENDENCIES',
                '/META-INF/LICENSE',
                '/META-INF/LICENSE.txt',
                '/META-INF/license.txt',
                '/META-INF/NOTICE',
                '/META-INF/NOTICE.txt',
                '/META-INF/notice.txt',
                '/META-INF/ASL2.0'
            ]
        }
    }
    
    // Lint options
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation'
    }
    
    // Test options
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    // Core Android libraries
    implementation "androidx.appcompat:appcompat:$rootProject.ext.appCompatVersion"
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion"
    
    // Navigation
    implementation "androidx.navigation:navigation-fragment:$rootProject.ext.navigationVersion"
    implementation "androidx.navigation:navigation-ui:$rootProject.ext.navigationVersion"
    
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.ext.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.ext.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.ext.lifecycleVersion"
    
    // Work Manager
    implementation "androidx.work:work-runtime:$rootProject.ext.workVersion"
    
    // Security
    implementation "androidx.security:security-crypto:$rootProject.ext.securityVersion"
    implementation "androidx.biometric:biometric:$rootProject.ext.biometricVersion"
    
    // UI Components
    implementation "com.airbnb.android:lottie:$rootProject.ext.lottieVersion"
    implementation "com.google.android.flexbox:flexbox:$rootProject.ext.flexboxVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.recyclerViewVersion"
    
    // JSON parsing
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    
    // Splash Screen
    implementation "androidx.core:core-splashscreen:$rootProject.ext.splashScreenVersion"
    
    // Core library desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    
    // Testing
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.androidJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test:rules:1.5.0"
    
    // UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$rootProject.ext.navigationVersion"
    
    // Work Manager testing
    androidTestImplementation "androidx.work:work-testing:$rootProject.ext.workVersion"
}
